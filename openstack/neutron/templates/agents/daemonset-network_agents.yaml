---
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: neutron-agents
  labels:
    system: openstack
    type: backend
    component: neutron
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        name: neutron-agents
        system: openstack
        type: backend
        component: neutron
    spec:
      hostNetwork: true
      hostPID: true
      hostIPC: true
      nodeSelector:
        species: network
      tolerations:
        - key: "species"
          operator: "Equal"
          value: "network"
          effect: "NoSchedule"
      containers:
        - name: neutron-dhcp-agent
          image: {{.Values.global.imageRegistry}}/{{.Values.image_name}}:{{.Values.agent_image_tag}}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command:
            - bash
          args:
            - /container.init/neutron-dhcp-agent-start
          env:
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: neutron.DSN.python
            - name: DEBUG_CONTAINER
              value: "false"
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - neutron-dhcp-agent-ready > /dev/null 2>&1
            initialDelaySeconds: 5
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /var/run
              name: run
            - mountPath: /neutron-etc
              name: neutron-etc
            - mountPath: /container.init
              name: container-init
        - name: neutron-metadata-agent
          image: {{.Values.global.imageRegistry}}/{{.Values.image_name}}:{{.Values.agent_image_tag}}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command:
            - bash
          args:
            - /container.init/neutron-metadata-agent-start
          env:
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: neutron.DSN.python
          volumeMounts:
            - mountPath: /var/run
              name: run
            - mountPath: /neutron-etc
              name: neutron-etc
            - mountPath: /container.init
              name: container-init
        - name: neutron-l3-agent
          image: {{.Values.global.imageRegistry}}/{{.Values.image_name}}:{{.Values.agent_image_tag}}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command:
            - bash
          args:
            - /container.init/neutron-l3-agent-start
          env:
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: neutron.DSN.python
          volumeMounts:
            - mountPath: /var/run
              name: run
            - mountPath: /lib/modules
              name: modules
              readOnly: true
            - mountPath: /neutron-etc
              name: neutron-etc
            - mountPath: /container.init
              name: container-init
        - name: neutron-ovs-agent
          image: {{.Values.global.imageRegistry}}/{{.Values.image_name}}:{{.Values.agent_image_tag}}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command:
            - bash
          args:
            - /container.init/neutron-ovs-agent-start
          env:
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: neutron.DSN.python
          volumeMounts:
            - mountPath: /var/run
              name: run
            - mountPath: /lib/modules
              name: modules
              readOnly: true
            - mountPath: /neutron-etc
              name: neutron-etc
            - mountPath: /container.init
              name: container-init

        - name: ovs
          image: {{.Values.global.imageRegistry}}/{{.Values.image_name}}:{{.Values.agent_image_tag}}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command:
            - bash
          args:
            - /container.init/neutron-ovs-start
          env:
            - name: DEBUG_CONTAINER
              value: "false"
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: neutron.DSN.python
          volumeMounts:
            - mountPath: /var/run
              name: run
            - mountPath: /lib/modules
              name: modules
              readOnly: true
            - mountPath: /container.init
              name: container-init
        - name: ovs-db
          image: {{.Values.global.imageRegistry}}/{{.Values.image_name}}:{{.Values.agent_image_tag}}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command:
            - bash
          args:
            - /container.init/neutron-ovs-db-start
          volumeMounts:
            - mountPath: /lib/modules
              name: modules
            - mountPath: /var/run
              name: run
            - mountPath: /container.init
              name: container-init
      volumes:
        - name : run
          emptyDir:
            medium: Memory
        - name : modules
          hostPath:
            path: /lib/modules
        - name: neutron-etc
          configMap:
            name: neutron-etc
        - name: container-init
          configMap:
            name: neutron-bin
