# Default values for glance.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  imageNamespace: monsoon
  imageRegistry: DEFINED-IN-REGION-CHART
  dbUser: glance
  master_password: ""
  pgbouncer:
    enabled: true

image_version: mitaka-20180425.1

stores: "swift,file"
default_store: swift

file:
  enabled: true
  persistence:
    enabled: true
    existingClaim: glance-pvclaim

swift:
  enabled: true
  username: glance
  userDomainName: Default
  projectName: master
  projectDomainName: ccadmin
  multi_tenant: true
  # store_large_object_size:

api_port_internal: '9292'

replicas: 1

upgrades:
  revisionHistory: 3
  podReplacementStrategy: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 3

api:
  debug: false
  resources:
    enabled: false
    limits:
      memory: 128Mi
      cpu: 500m
    requests:
      memory: 128Mi
      cpu: 500m

registry:
  debug: false
  resources:
    enabled: false
    limits:
      memory: 128Mi
      cpu: 500m
    requests:
      memory: 128Mi
      cpu: 500m

services:
  type: ClusterIP
#  externalip: "192.168.1.100"

keystone:
# specify the k8s keystone namespace if diffrent from glance
# namespace: keystone
# authUrl: http://identity.cluster.cloud.sap/v3
  identityApiVersion: 3
  username: glance
  password: secret
  userDomainId: default
# userDomainName: Default
  projectName: service
  projectDomainId: default
# projectDomainName: Default


metrics:
  enabled: true
  port: "9102"

memcached:
  metrics:
    enabled: true

sentry:
  enabled: true

postgresql:
  imageTag: '9.4.14'
  postgresDatabase: glance
  dbInit: glance-db-init
  dbMaintain: glance-db-maintain
  pgbouncer:
    enabled: true
  persistence:
    enabled: true
    existingClaim: db-glance-pvclaim
  backup:
    enabled: true
    metrics: true
    imageTag: v0.5.12
    os_password: null

logging:
    formatters:
        context:
            class: oslo_log.formatters.ContextFormatter
        default:
            format: "%(message)s"
    handlers:
        stdout:
            class: StreamHandler
            args: "(sys.stdout,)"
            formatter: context
        "null":
            class: logging.NullHandler
            args: "()"
            formatter: default
        sentry:
            class: raven.handlers.logging.SentryHandler
            level: ERROR
            args: "()"
    loggers:
        root:
            handlers: "null"
            level: WARNING
        glance:
            handlers: stdout, sentry
            level: DEBUG
        glance_store:
            handlers: stdout, sentry
            level: DEBUG
        amqp:
            handlers: stdout, sentry
            level: WARNING
        amqplib:
            handlers: stdout, sentry
            level: WARNING
        boto:
            handlers: stdout, sentry
            level: WARNING
        eventlet.wsgi.server:
            handlers: stdout, sentry
            level: INFO
        sqlalchemy:
            handlers: stdout, sentry
            level: WARNING
        suds:
            handlers: stdout, sentry
            level: WARNING

vice_president: true

image_version_glance_nanny: '20180507110337'
nanny:
  enabled: False
  # debug mode - no script run in the containers, just a sleep loop
  debug: True
  # run the nanny every n minutes
  interval: 60
  db_purge:
    enabled: True
    # purge deleted db entries older than n days
    older_than: 7
    # delete at max number of entries in one run
    max_number: 50
